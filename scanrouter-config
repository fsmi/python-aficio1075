#!/usr/bin/python2.5
# -*- coding: utf-8 -*-
# vim:set ts=4 sw=4 noet:

# scanrouter-config -- command-line tool to configure Ricoh Aficio 1075's scan
#                      system.
#
# Copyright (C) 2007, 2008 Fabian Knittel <fabian.knittel@fsmi.uni-karlsruhe.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA.

import sys
import socket
import os
from delivery_input import DeliveryInput
from delivery_service_lists import TargetList
from optparse import OptionParser
from ConfigParser import SafeConfigParser
from mac_address import get_mac_address, compact_mac_address

CONFIG_FILE = "/etc/scanrouter.conf"


def main():
	# Parse command-line options.
	parser = OptionParser()

	parser.add_option("-c", "--config",
					action = "store", dest = "config_file",
					help = "Configuration file",
					default = CONFIG_FILE)

	(options, args) = parser.parse_args()
	if len(args) != 0:
		parser.error("incorrect number of arguments")

	# Load configuration file.
	cf = SafeConfigParser()
	cf.read(options.config_file)

	ftp_base_dir = cf.get('ftp', 'base_dir')
	printer_host = cf.get('printer', 'host')

	# Prepare FTP root
	#

	if not os.path.exists(ftp_base_dir):
		parser.error("FTP base directory does not exist, please create first")

	tl = TargetList(compact_mac_address(get_mac_address(
				socket.gethostbyname(printer_host))))
	try:
		# Attempt to read the revisions and versions from what we already have.
		tl.load_path(ftp_base_dir)
	except:
		print "No existing configuration found or problems during load"
	# Load the actual configuration.
	tl.load_config(cf)
	# Dump the accumulated stuff back to the FTP root.
	tl.dump_path(ftp_base_dir)


	# Setup printer
	#

	sdi = DeliveryInput(host = cf.get('printer', 'host'),
			port = cf.getint('printer', 'port'))
	sdi.authenticate(cf.get('printer', 'auth_cookie'))

	scan_host = cf.get('ftp', 'scan_host')
	sdi.set_delivery_service(scan_host)
	# Force a sync.
	sdi.synchronize(scan_host, tl.version.generation_nr)

if __name__ == '__main__':
	main()
